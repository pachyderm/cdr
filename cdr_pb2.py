# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cdr.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='cdr.proto',
  package='pachyderm.cdr',
  syntax='proto3',
  serialized_options=b'Z\030github.com/pachyderm/cdr',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\tcdr.proto\x12\rpachyderm.cdr\"\xbe\x02\n\x03Ref\x12#\n\x04http\x18\x01 \x01(\x0b\x32\x13.pachyderm.cdr.HTTPH\x00\x12\x32\n\x0c\x63ontent_hash\x18  \x01(\x0b\x32\x1a.pachyderm.cdr.ContentHashH\x00\x12\x30\n\x0bsize_limits\x18! \x01(\x0b\x32\x19.pachyderm.cdr.SizeLimitsH\x00\x12\'\n\x06\x63ipher\x18@ \x01(\x0b\x32\x15.pachyderm.cdr.CipherH\x00\x12+\n\x08\x63ompress\x18\x41 \x01(\x0b\x32\x17.pachyderm.cdr.CompressH\x00\x12%\n\x05slice\x18\x42 \x01(\x0b\x32\x14.pachyderm.cdr.SliceH\x00\x12\'\n\x06\x63oncat\x18` \x01(\x0b\x32\x15.pachyderm.cdr.ConcatH\x00\x42\x06\n\x04\x62ody\"v\n\x04HTTP\x12\x0b\n\x03url\x18\x01 \x01(\t\x12\x31\n\x07headers\x18\x02 \x03(\x0b\x32 .pachyderm.cdr.HTTP.HeadersEntry\x1a.\n\x0cHeadersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"e\n\x0b\x43ontentHash\x12!\n\x05inner\x18\x01 \x01(\x0b\x32\x12.pachyderm.cdr.Ref\x12%\n\x04\x61lgo\x18\x02 \x01(\x0e\x32\x17.pachyderm.cdr.HashAlgo\x12\x0c\n\x04hash\x18\x03 \x01(\x0c\"I\n\nSizeLimits\x12!\n\x05inner\x18\x01 \x01(\x0b\x32\x12.pachyderm.cdr.Ref\x12\x0b\n\x03min\x18\x02 \x01(\x03\x12\x0b\n\x03max\x18\x03 \x01(\x03\"p\n\x06\x43ipher\x12!\n\x05inner\x18\x01 \x01(\x0b\x32\x12.pachyderm.cdr.Ref\x12\'\n\x04\x61lgo\x18\x02 \x01(\x0e\x32\x19.pachyderm.cdr.CipherAlgo\x12\x0b\n\x03key\x18\x03 \x01(\x0c\x12\r\n\x05nonce\x18\x04 \x01(\x0c\"X\n\x08\x43ompress\x12!\n\x05inner\x18\x01 \x01(\x0b\x32\x12.pachyderm.cdr.Ref\x12)\n\x04\x61lgo\x18\x02 \x01(\x0e\x32\x1b.pachyderm.cdr.CompressAlgo\"F\n\x05Slice\x12!\n\x05inner\x18\x01 \x01(\x0b\x32\x12.pachyderm.cdr.Ref\x12\r\n\x05start\x18\x02 \x01(\x04\x12\x0b\n\x03\x65nd\x18\x03 \x01(\x04\"*\n\x06\x43oncat\x12 \n\x04refs\x18\x01 \x03(\x0b\x32\x12.pachyderm.cdr.Ref*/\n\x08HashAlgo\x12\x10\n\x0cUNKNOWN_HASH\x10\x00\x12\x11\n\x0b\x42LAKE2b_256\x10\xa0\xe4\x02*.\n\nCipherAlgo\x12\x12\n\x0eUNKNOWN_CIPHER\x10\x00\x12\x0c\n\x08\x43HACHA20\x10\x01*.\n\x0c\x43ompressAlgo\x12\x14\n\x10UNKNOWN_COMPRESS\x10\x00\x12\x08\n\x04GZIP\x10\x01\x42\x1aZ\x18github.com/pachyderm/cdrb\x06proto3'
)

_HASHALGO = _descriptor.EnumDescriptor(
  name='HashAlgo',
  full_name='pachyderm.cdr.HashAlgo',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN_HASH', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='BLAKE2b_256', index=1, number=45600,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=967,
  serialized_end=1014,
)
_sym_db.RegisterEnumDescriptor(_HASHALGO)

HashAlgo = enum_type_wrapper.EnumTypeWrapper(_HASHALGO)
_CIPHERALGO = _descriptor.EnumDescriptor(
  name='CipherAlgo',
  full_name='pachyderm.cdr.CipherAlgo',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN_CIPHER', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='CHACHA20', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1016,
  serialized_end=1062,
)
_sym_db.RegisterEnumDescriptor(_CIPHERALGO)

CipherAlgo = enum_type_wrapper.EnumTypeWrapper(_CIPHERALGO)
_COMPRESSALGO = _descriptor.EnumDescriptor(
  name='CompressAlgo',
  full_name='pachyderm.cdr.CompressAlgo',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN_COMPRESS', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='GZIP', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1064,
  serialized_end=1110,
)
_sym_db.RegisterEnumDescriptor(_COMPRESSALGO)

CompressAlgo = enum_type_wrapper.EnumTypeWrapper(_COMPRESSALGO)
UNKNOWN_HASH = 0
BLAKE2b_256 = 45600
UNKNOWN_CIPHER = 0
CHACHA20 = 1
UNKNOWN_COMPRESS = 0
GZIP = 1



_REF = _descriptor.Descriptor(
  name='Ref',
  full_name='pachyderm.cdr.Ref',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='http', full_name='pachyderm.cdr.Ref.http', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='content_hash', full_name='pachyderm.cdr.Ref.content_hash', index=1,
      number=32, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='size_limits', full_name='pachyderm.cdr.Ref.size_limits', index=2,
      number=33, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='cipher', full_name='pachyderm.cdr.Ref.cipher', index=3,
      number=64, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='compress', full_name='pachyderm.cdr.Ref.compress', index=4,
      number=65, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='slice', full_name='pachyderm.cdr.Ref.slice', index=5,
      number=66, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='concat', full_name='pachyderm.cdr.Ref.concat', index=6,
      number=96, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='body', full_name='pachyderm.cdr.Ref.body',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=29,
  serialized_end=347,
)


_HTTP_HEADERSENTRY = _descriptor.Descriptor(
  name='HeadersEntry',
  full_name='pachyderm.cdr.HTTP.HeadersEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='pachyderm.cdr.HTTP.HeadersEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='value', full_name='pachyderm.cdr.HTTP.HeadersEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'8\001',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=421,
  serialized_end=467,
)

_HTTP = _descriptor.Descriptor(
  name='HTTP',
  full_name='pachyderm.cdr.HTTP',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='url', full_name='pachyderm.cdr.HTTP.url', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='headers', full_name='pachyderm.cdr.HTTP.headers', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_HTTP_HEADERSENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=349,
  serialized_end=467,
)


_CONTENTHASH = _descriptor.Descriptor(
  name='ContentHash',
  full_name='pachyderm.cdr.ContentHash',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='inner', full_name='pachyderm.cdr.ContentHash.inner', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='algo', full_name='pachyderm.cdr.ContentHash.algo', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='hash', full_name='pachyderm.cdr.ContentHash.hash', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=469,
  serialized_end=570,
)


_SIZELIMITS = _descriptor.Descriptor(
  name='SizeLimits',
  full_name='pachyderm.cdr.SizeLimits',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='inner', full_name='pachyderm.cdr.SizeLimits.inner', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='min', full_name='pachyderm.cdr.SizeLimits.min', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='max', full_name='pachyderm.cdr.SizeLimits.max', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=572,
  serialized_end=645,
)


_CIPHER = _descriptor.Descriptor(
  name='Cipher',
  full_name='pachyderm.cdr.Cipher',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='inner', full_name='pachyderm.cdr.Cipher.inner', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='algo', full_name='pachyderm.cdr.Cipher.algo', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='key', full_name='pachyderm.cdr.Cipher.key', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='nonce', full_name='pachyderm.cdr.Cipher.nonce', index=3,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=647,
  serialized_end=759,
)


_COMPRESS = _descriptor.Descriptor(
  name='Compress',
  full_name='pachyderm.cdr.Compress',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='inner', full_name='pachyderm.cdr.Compress.inner', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='algo', full_name='pachyderm.cdr.Compress.algo', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=761,
  serialized_end=849,
)


_SLICE = _descriptor.Descriptor(
  name='Slice',
  full_name='pachyderm.cdr.Slice',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='inner', full_name='pachyderm.cdr.Slice.inner', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='start', full_name='pachyderm.cdr.Slice.start', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='end', full_name='pachyderm.cdr.Slice.end', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=851,
  serialized_end=921,
)


_CONCAT = _descriptor.Descriptor(
  name='Concat',
  full_name='pachyderm.cdr.Concat',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='refs', full_name='pachyderm.cdr.Concat.refs', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=923,
  serialized_end=965,
)

_REF.fields_by_name['http'].message_type = _HTTP
_REF.fields_by_name['content_hash'].message_type = _CONTENTHASH
_REF.fields_by_name['size_limits'].message_type = _SIZELIMITS
_REF.fields_by_name['cipher'].message_type = _CIPHER
_REF.fields_by_name['compress'].message_type = _COMPRESS
_REF.fields_by_name['slice'].message_type = _SLICE
_REF.fields_by_name['concat'].message_type = _CONCAT
_REF.oneofs_by_name['body'].fields.append(
  _REF.fields_by_name['http'])
_REF.fields_by_name['http'].containing_oneof = _REF.oneofs_by_name['body']
_REF.oneofs_by_name['body'].fields.append(
  _REF.fields_by_name['content_hash'])
_REF.fields_by_name['content_hash'].containing_oneof = _REF.oneofs_by_name['body']
_REF.oneofs_by_name['body'].fields.append(
  _REF.fields_by_name['size_limits'])
_REF.fields_by_name['size_limits'].containing_oneof = _REF.oneofs_by_name['body']
_REF.oneofs_by_name['body'].fields.append(
  _REF.fields_by_name['cipher'])
_REF.fields_by_name['cipher'].containing_oneof = _REF.oneofs_by_name['body']
_REF.oneofs_by_name['body'].fields.append(
  _REF.fields_by_name['compress'])
_REF.fields_by_name['compress'].containing_oneof = _REF.oneofs_by_name['body']
_REF.oneofs_by_name['body'].fields.append(
  _REF.fields_by_name['slice'])
_REF.fields_by_name['slice'].containing_oneof = _REF.oneofs_by_name['body']
_REF.oneofs_by_name['body'].fields.append(
  _REF.fields_by_name['concat'])
_REF.fields_by_name['concat'].containing_oneof = _REF.oneofs_by_name['body']
_HTTP_HEADERSENTRY.containing_type = _HTTP
_HTTP.fields_by_name['headers'].message_type = _HTTP_HEADERSENTRY
_CONTENTHASH.fields_by_name['inner'].message_type = _REF
_CONTENTHASH.fields_by_name['algo'].enum_type = _HASHALGO
_SIZELIMITS.fields_by_name['inner'].message_type = _REF
_CIPHER.fields_by_name['inner'].message_type = _REF
_CIPHER.fields_by_name['algo'].enum_type = _CIPHERALGO
_COMPRESS.fields_by_name['inner'].message_type = _REF
_COMPRESS.fields_by_name['algo'].enum_type = _COMPRESSALGO
_SLICE.fields_by_name['inner'].message_type = _REF
_CONCAT.fields_by_name['refs'].message_type = _REF
DESCRIPTOR.message_types_by_name['Ref'] = _REF
DESCRIPTOR.message_types_by_name['HTTP'] = _HTTP
DESCRIPTOR.message_types_by_name['ContentHash'] = _CONTENTHASH
DESCRIPTOR.message_types_by_name['SizeLimits'] = _SIZELIMITS
DESCRIPTOR.message_types_by_name['Cipher'] = _CIPHER
DESCRIPTOR.message_types_by_name['Compress'] = _COMPRESS
DESCRIPTOR.message_types_by_name['Slice'] = _SLICE
DESCRIPTOR.message_types_by_name['Concat'] = _CONCAT
DESCRIPTOR.enum_types_by_name['HashAlgo'] = _HASHALGO
DESCRIPTOR.enum_types_by_name['CipherAlgo'] = _CIPHERALGO
DESCRIPTOR.enum_types_by_name['CompressAlgo'] = _COMPRESSALGO
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Ref = _reflection.GeneratedProtocolMessageType('Ref', (_message.Message,), {
  'DESCRIPTOR' : _REF,
  '__module__' : 'cdr_pb2'
  # @@protoc_insertion_point(class_scope:pachyderm.cdr.Ref)
  })
_sym_db.RegisterMessage(Ref)

HTTP = _reflection.GeneratedProtocolMessageType('HTTP', (_message.Message,), {

  'HeadersEntry' : _reflection.GeneratedProtocolMessageType('HeadersEntry', (_message.Message,), {
    'DESCRIPTOR' : _HTTP_HEADERSENTRY,
    '__module__' : 'cdr_pb2'
    # @@protoc_insertion_point(class_scope:pachyderm.cdr.HTTP.HeadersEntry)
    })
  ,
  'DESCRIPTOR' : _HTTP,
  '__module__' : 'cdr_pb2'
  # @@protoc_insertion_point(class_scope:pachyderm.cdr.HTTP)
  })
_sym_db.RegisterMessage(HTTP)
_sym_db.RegisterMessage(HTTP.HeadersEntry)

ContentHash = _reflection.GeneratedProtocolMessageType('ContentHash', (_message.Message,), {
  'DESCRIPTOR' : _CONTENTHASH,
  '__module__' : 'cdr_pb2'
  # @@protoc_insertion_point(class_scope:pachyderm.cdr.ContentHash)
  })
_sym_db.RegisterMessage(ContentHash)

SizeLimits = _reflection.GeneratedProtocolMessageType('SizeLimits', (_message.Message,), {
  'DESCRIPTOR' : _SIZELIMITS,
  '__module__' : 'cdr_pb2'
  # @@protoc_insertion_point(class_scope:pachyderm.cdr.SizeLimits)
  })
_sym_db.RegisterMessage(SizeLimits)

Cipher = _reflection.GeneratedProtocolMessageType('Cipher', (_message.Message,), {
  'DESCRIPTOR' : _CIPHER,
  '__module__' : 'cdr_pb2'
  # @@protoc_insertion_point(class_scope:pachyderm.cdr.Cipher)
  })
_sym_db.RegisterMessage(Cipher)

Compress = _reflection.GeneratedProtocolMessageType('Compress', (_message.Message,), {
  'DESCRIPTOR' : _COMPRESS,
  '__module__' : 'cdr_pb2'
  # @@protoc_insertion_point(class_scope:pachyderm.cdr.Compress)
  })
_sym_db.RegisterMessage(Compress)

Slice = _reflection.GeneratedProtocolMessageType('Slice', (_message.Message,), {
  'DESCRIPTOR' : _SLICE,
  '__module__' : 'cdr_pb2'
  # @@protoc_insertion_point(class_scope:pachyderm.cdr.Slice)
  })
_sym_db.RegisterMessage(Slice)

Concat = _reflection.GeneratedProtocolMessageType('Concat', (_message.Message,), {
  'DESCRIPTOR' : _CONCAT,
  '__module__' : 'cdr_pb2'
  # @@protoc_insertion_point(class_scope:pachyderm.cdr.Concat)
  })
_sym_db.RegisterMessage(Concat)


DESCRIPTOR._options = None
_HTTP_HEADERSENTRY._options = None
# @@protoc_insertion_point(module_scope)
